# Test configuration for Portal API testing
controller:
  address: ":9091"
  timeout: 30s
  read_timeout: 10s
  write_timeout: 10s

# Enable Portal for testing
portal:
  enabled: true
  port: 3000
  jwt:
    secret: "test-secret-key-for-portal-jwt-signing-should-be-long-enough"
    algorithm: "HS256"
    expires_in: "24h"
    issuer: "stargate-portal"
  repository:
    type: "memory"
    memory: {}
    postgres:
      dsn: "postgres://postgres:password@localhost:5432/stargate?sslmode=disable"
      max_open_conns: 25
      max_idle_conns: 5
      conn_max_lifetime: "5m"
      migration_path: "file://internal/portal/repository/postgres/migrations"
  cors:
    enabled: true
    allowed_origins: ["*"]
    allowed_methods: ["GET", "POST", "PUT", "DELETE", "OPTIONS"]
    allowed_headers: ["Content-Type", "Authorization"]
    exposed_headers: []
    allow_credentials: true
    max_age: 86400

# Admin API configuration
admin_api:
  rest:
    enabled: true
    prefix: "/api/v1"
  grpc:
    enabled: false
    port: 9091
  auth:
    enabled: false

# Store configuration (use memory for testing)
store:
  type: "memory"
  key_prefix: "/stargate/config"
  watch: false

# Sync configuration
sync:
  interval: 30s
  gitops:
    enabled: false
  validation:
    enabled: true
    strict: true

# Routes configuration
routes:
  defaults:
    timeout: 30s
    retries: 3
    retry_timeout: 5s

# Upstreams configuration
upstreams:
  defaults:
    algorithm: "round_robin"
    health_check:
      enabled: true
      interval: 30s
      timeout: 5s
      healthy_threshold: 2
      unhealthy_threshold: 3
      path: "/health"

# Logging configuration
logging:
  level: "info"
  format: "json"
  output: "stdout"
  access_log:
    enabled: true
    format: "combined"
    output: "stdout"

# Metrics configuration
metrics:
  enabled: true
  path: "/metrics"
  prometheus:
    enabled: true
    namespace: "stargate"
    subsystem: "controller"

# Tracing configuration
tracing:
  enabled: false
