# Stargate Controller Configuration
# Control Plane Configuration

# Controller server configuration
controller:
  # Admin API server address
  address: ":9090"
  # HTTPS server address (optional)
  https_address: ":9443"
  # TLS configuration
  tls:
    enabled: false
    cert_file: ""
    key_file: ""
    # ACME (Let's Encrypt) configuration
    acme:
      enabled: false
      domains: []
      email: ""
      cache_dir: "./acme-cache"
      directory_url: ""  # Leave empty for production, use "https://acme-staging-v02.api.letsencrypt.org/directory" for staging
      accept_tos: false
  # Request timeout
  timeout: 30s
  # Read timeout
  read_timeout: 10s
  # Write timeout
  write_timeout: 10s

# Developer Portal configuration
portal:
  # Enable developer portal
  enabled: false
  # Portal server port
  port: 3000
  # JWT configuration for portal authentication
  jwt:
    secret: ""
    algorithm: "HS256"
    expires_in: "24h"
    issuer: "stargate-portal"
  # Repository configuration
  repository:
    # Repository type: "memory" or "postgres"
    type: "memory"
    # Memory repository configuration (no additional config needed)
    memory: {}
    # PostgreSQL repository configuration
    postgres:
      dsn: "postgres://postgres:password@localhost:5432/stargate?sslmode=disable"
      max_open_conns: 25
      max_idle_conns: 5
      conn_max_lifetime: "5m"
      migration_path: "file://internal/portal/repository/postgres/migrations"
  # CORS configuration for portal API
  cors:
    enabled: true
    allowed_origins: ["*"]
    allowed_methods: ["GET", "POST", "PUT", "DELETE", "OPTIONS"]
    allowed_headers: ["Content-Type", "Authorization"]
    exposed_headers: []
    allow_credentials: true
    max_age: 86400

# Admin API configuration
admin_api:
  # Enable REST API
  rest:
    enabled: true
    prefix: "/api/v1"
  # Enable gRPC API
  grpc:
    enabled: true
    port: 9091
  # Authentication
  auth:
    enabled: false
    # JWT configuration
    jwt:
      secret: ""
      algorithm: "HS256"
      expires_in: "24h"
    # API Key configuration
    api_key:
      header: "X-Admin-Key"
      keys: []

# Configuration synchronization
sync:
  # Sync interval
  interval: 30s
  # GitOps configuration
  gitops:
    enabled: false
    # Git repository URL
    repository: ""
    # Branch to watch
    branch: "main"
    # Path to configuration files
    path: "configs"
    # SSH key file (for private repositories)
    ssh_key_file: ""
    # Polling interval
    poll_interval: "5m"
  # Configuration validation
  validation:
    enabled: true
    # Strict mode (fail on validation errors)
    strict: true

# Configuration store
store:
  # Store type: etcd, consul, file
  type: "etcd"
  # Etcd configuration
  etcd:
    endpoints:
      - "localhost:2379"
    timeout: 5s
    # TLS configuration
    tls:
      enabled: false
      cert_file: ""
      key_file: ""
      ca_file: ""
    # Authentication
    username: ""
    password: ""
  # Configuration key prefix
  key_prefix: "/stargate/config"
  # Watch for configuration changes
  watch: true

# Route management
routes:
  # Default route configuration
  defaults:
    timeout: 30s
    retries: 3
    retry_timeout: 5s

# Upstream management
upstreams:
  # Default upstream configuration
  defaults:
    algorithm: "round_robin"
    health_check:
      enabled: true
      interval: 30s
      timeout: 5s
      healthy_threshold: 2
      unhealthy_threshold: 3
      path: "/health"

# Plugin management
plugins:
  # Plugin directory
  directory: "./plugins"
  # Auto-load plugins
  auto_load: true
  # Plugin configuration
  config: {}

# Logging configuration
logging:
  level: "info"
  format: "json"
  output: "stdout"
  # Audit log
  audit_log:
    enabled: true
    output: "stdout"

# Metrics configuration
metrics:
  enabled: true
  path: "/metrics"
  # Prometheus configuration
  prometheus:
    enabled: true
    namespace: "stargate"
    subsystem: "controller"

# Tracing configuration
tracing:
  enabled: false
  # Jaeger configuration
  jaeger:
    endpoint: "http://localhost:14268/api/traces"
    service_name: "stargate-controller"
    sample_rate: 0.1

# Webhook configuration
webhooks:
  # Configuration change webhooks
  config_change:
    enabled: false
    url: ""
    timeout: 10s
    retry_count: 3
  # Health status webhooks
  health_status:
    enabled: false
    url: ""
    timeout: 10s
    retry_count: 3
