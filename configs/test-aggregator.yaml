# Test configuration for API Aggregator functionality
# This configuration sets up the test scenario for BIC-SA-01

server:
  address: ":8080"
  read_timeout: 30s
  write_timeout: 30s
  idle_timeout: 60s
  max_header_bytes: 1048576

# API Aggregator Configuration for Testing
aggregator:
  enabled: true
  default_timeout: 10s
  max_concurrency: 50
  routes:
    # Test route: /aggregated/profile
    # This route aggregates user and order data as specified in the task
    - id: "profile-aggregate-test"
      path: "/aggregated/profile"
      method: "GET"
      timeout: 15s
      upstream_requests:
        # User service request
        - name: "user"
          url: "https://jsonplaceholder.typicode.com/users/1"
          method: "GET"
          headers:
            Content-Type: "application/json"
            User-Agent: "Stargate-Aggregator/1.0"
          timeout: 5s
          required: true
        # Orders service request (simulated with posts for testing)
        - name: "orders"
          url: "https://jsonplaceholder.typicode.com/posts?userId=1"
          method: "GET"
          headers:
            Content-Type: "application/json"
            User-Agent: "Stargate-Aggregator/1.0"
          timeout: 5s
          required: false

    # Additional test route for error handling
    - id: "error-handling-test"
      path: "/aggregated/test-error"
      method: "GET"
      timeout: 10s
      upstream_requests:
        - name: "valid_service"
          url: "https://jsonplaceholder.typicode.com/users/1"
          method: "GET"
          timeout: 3s
          required: false
        - name: "invalid_service"
          url: "https://invalid-domain-for-testing.com/api/data"
          method: "GET"
          timeout: 2s
          required: false

    # Test route with required service failure
    - id: "required-failure-test"
      path: "/aggregated/test-required-failure"
      method: "GET"
      timeout: 8s
      upstream_requests:
        - name: "required_service"
          url: "https://invalid-domain-for-testing.com/api/required"
          method: "GET"
          timeout: 3s
          required: true
        - name: "optional_service"
          url: "https://jsonplaceholder.typicode.com/users/1"
          method: "GET"
          timeout: 3s
          required: false

# Minimal middleware configuration for testing
auth:
  enabled: false

cors:
  enabled: true
  allowed_origins: ["*"]
  allowed_methods: ["GET", "POST", "PUT", "DELETE", "OPTIONS"]
  allowed_headers: ["Content-Type", "Authorization"]

rate_limit:
  enabled: false

circuit_breaker:
  enabled: false

ip_acl:
  enabled: false

header_transform:
  enabled: false

mock_response:
  enabled: false

grpc_web:
  enabled: false

traffic_mirror:
  enabled: false

logging:
  access_log:
    enabled: true
    format: "json"
    output: "stdout"
    fields:
      - "timestamp"
      - "method"
      - "path"
      - "status"
      - "duration"
      - "size"

metrics:
  enabled: true
  prometheus:
    enabled: true
    path: "/metrics"
    port: 9090

tracing:
  enabled: false

# Proxy configuration
proxy:
  buffer_size: 32768
  dial_timeout: 10s
  keep_alive: 30s
  max_idle_conns: 100
  max_idle_conns_per_host: 10
  idle_conn_timeout: 90s

# Load balancer configuration
load_balancer:
  default_algorithm: "round_robin"
  health_check_interval: 30s

# Store configuration (not needed for this test)
store:
  type: "memory"

# Sync configuration (not needed for this test)
sync:
  interval: 30s

# Admin API configuration (for monitoring)
admin_api:
  enabled: true
  address: ":8081"
  auth:
    enabled: false

# Routes and upstreams (empty for aggregator testing)
routes:
  config_file: ""
  auto_reload: false

upstreams:
  config_file: ""
  auto_reload: false
  defaults:
    algorithm: "round_robin"
    health_check:
      active:
        enabled: false
      passive:
        enabled: false

# Plugins and webhooks (not needed for this test)
plugins:
  enabled: false

webhooks:
  enabled: false
